plugins {
    id 'org.springframework.boot' version '2.1.8.RELEASE' apply false
    id 'org.sonarqube' version '2.7.1'
    id 'com.github.ben-manes.versions' version '0.25.0'
}

group = 'io.github.bbortt.qdrakeboo'

ext {
    set('springBootVersion', "2.1.8.RELEASE")
    set('springCloudVersion', "Greenwich.SR3")
}


sonarqube {
    properties {
        property 'sonar.projectKey', 'bbortt_qdrakeboo'
    }
}

allprojects {
    version "${version}"

    repositories {
        mavenCentral()
    }
}

subprojects {
    def globalJavaConfiguration = {
        apply plugin: 'org.springframework.boot'
        apply plugin: 'io.spring.dependency-management'
        apply plugin: 'jacoco'

        sourceCompatibility = '11'
        targetCompatibility = '11'

        buildscript {
            dependencies {
                classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
            }
        }

        dependencyManagement {
            imports {
                mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            }
        }

        dependencies {
            implementation 'org.springframework.boot:spring-boot-starter'
            testImplementation 'org.springframework.boot:spring-boot-starter-test'
        }

        check.dependsOn jacocoTestReport
    }

    pluginManager.withPlugin('java', globalJavaConfiguration)
    pluginManager.withPlugin('java', {
        configurations {
            developmentOnly

            runtimeClasspath {
                extendsFrom developmentOnly
            }
        }

        dependencies {
            developmentOnly 'org.springframework.boot:spring-boot-devtools'
            implementation 'org.springframework.boot:spring-boot-starter-actuator'
            implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-config'
        }
    })
}
