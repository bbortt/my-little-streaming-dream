<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>authorization-server</artifactId>

  <parent>
    <groupId>io.github.bbortt.qdrakeboo</groupId>
    <artifactId>parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>

  <properties>
    <!-- General -->
    <mainClass>io.github.bbortt.qdrakeboo.authorizationserver.AuthorizationServer</mainClass>

    <!-- Dependencies -->
    <spring-security-oauth2-version>2.3.5.RELEASE</spring-security-oauth2-version>

    <!-- Plugins -->
    <docker-maven-plugin-version>0.28.0</docker-maven-plugin-version>

    <!-- Docker -->
    <DOCKER_HOST>tcp://127.0.0.1:2375</DOCKER_HOST>
  </properties>

  <dependencies>
    <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>

      <exclusions>
        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-tomcat -->
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-undertow -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-undertow</artifactId>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.springframework.security.oauth/spring-security-oauth2 -->
    <dependency>
      <groupId>org.springframework.security.oauth</groupId>
      <artifactId>spring-security-oauth2</artifactId>
      <version>${spring-security-oauth2-version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.springframework.session/spring-session-data-redis -->
    <dependency>
      <groupId>org.springframework.session</groupId>
      <artifactId>spring-session-data-redis</artifactId>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-redis -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-redis</artifactId>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-jdbc -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.flywaydb/flyway-core -->
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-configuration-processor -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-failsafe-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>

        <configuration>
          <environmentVariables>
            <it-redis.port>${it-redis.port}</it-redis.port>
            <it-database.port>${it-database.port}</it-database.port>
          </environmentVariables>
        </configuration>
      </plugin>

      <!-- https://mvnrepository.com/artifact/io.fabric8/docker-maven-plugin -->
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker-maven-plugin-version}</version>

        <configuration>
          <dockerHost>${DOCKER_HOST}</dockerHost>
        </configuration>

        <executions>
          <execution>
            <id>prepare-it-images</id>

            <phase>pre-integration-test</phase>

            <goals>
              <goal>start</goal>
            </goals>

            <configuration>
              <images>
                <image>
                  <name>postgres:11.1-alpine</name>

                  <alias>qdrakeboo-authorization-it-postgres</alias>

                  <run>
                    <ports>
                      <port>it-database.port:5432</port>
                    </ports>

                    <env>
                      <POSTGRES_USER>qdrakeboo_authorization</POSTGRES_USER>
                    </env>
                  </run>
                </image>

                <image>
                  <name>redis:5.0.3</name>

                  <alias>qdrakeboo-authorization-it-redis</alias>

                  <run>
                    <ports>
                      <port>it-redis.port:6379</port>
                    </ports>
                  </run>
                </image>
              </images>
            </configuration>
          </execution>

          <execution>
            <id>remove-it-images</id>

            <phase>post-integration-test</phase>

            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- https://mvnrepository.com/artifact/com.spotify/dockerfile-maven-plugin -->
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>

        <configuration>
          <configuration>
            <repository>${DOCKER_REPOSITORY}</repository>
            <tag>${project.version}</tag>

            <buildArgs>
              <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
            </buildArgs>
          </configuration>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>dev</id>

      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>


      <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>

            <configuration>
              <profiles>
                <profile>dev</profile>
              </profiles>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
